{
  description = "A simple NixOS flake config";

  inputs = {
    # NixOS 官方软件源，这里使用 nixos-25.05 分支
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-25.05";
    nixos-wsl.url = "github:nix-community/NixOS-WSL/main";
    agenix.url = "github:ryantm/agenix";
    nix-ld = {
      url = "github:nix-community/nix-ld";
      # this line assume that you also have nixpkgs as an input
      inputs.nixpkgs.follows = "nixpkgs";
    };
    # github:[username]/[reponame]/[branchname]
    home-manager.url = "github:nix-community/home-manager/release-25.05";
    # helix.url = "github:helix-editor/helix/master";
  };

  outputs =
    {
      self,
      nixpkgs,
      nixos-wsl,
      nixos-hardware,
      nix-ld,
      home-manager,
      agenix,
      ...
    }@inputs:
    {
      nixosConfigurations = {
        wsl = nixpkgs.lib.nixosSystem {
          system = "x86_64-linux";
          modules = [
            ./wsl/init.nix
            agenix.nixosModules.default
            nixos-wsl.nixosModules.default
            {
              system.stateVersion = "25.05";
              wsl.enable = true;
            }
            home-manager.nixosModules.home-manager
            {
              home-manager.useGlobalPkgs = true;
              home-manager.useUserPackages = true;

              # 这里的 ryan 也得替换成你的用户名
              # 这里的 import 函数在前面 Nix 语法中介绍过了，不再赘述
              home-manager.users.nixos = import ./common/home.nix;

              # 使用 home-manager.extraSpecialArgs 自定义传递给 ./home.nix 的参数
              # 取消注释下面这一行，就可以在 home.nix 中使用 flake 的所有 inputs 参数了
              # home-manager.extraSpecialArgs = inputs;
            }
          ];
        };
        # Alias for `nixos` hostname generated by default.
        nixosConfigurations.nixos = self.nixosConfigurations.wsl;
      };
    };
}
